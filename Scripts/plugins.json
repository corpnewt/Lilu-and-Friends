{
  "Changes": "Add iBriged.",
  "Plugins": [
    {
      "Build Opts": [
        "-sdk",
        "macosx",
        "-alltargets"
      ],
      "Desc": "uses ACPI methods to control laptop backlight - pre-10.12.4",
      "Folder": "OS-X-ACPI-Backlight",
      "Name": "ACPIBacklight",
      "URL": "git clone --depth 1 https://github.com/RehabMan/OS-X-ACPI-Backlight",
      "bitbucket": {
        "URL": "https://bitbucket.org/RehabMan/os-x-acpi-backlight/downloads/"
      }
    },
    {
      "Build Opts": [
        "-sdk",
        "macosx",
        "-alltargets"
      ],
      "Desc": "implements an ACPI based battery manager kext",
      "Folder": "OS-X-ACPI-Battery-Driver",
      "Name": "ACPIBatteryManager",
      "URL": "git clone --depth 1 https://github.com/RehabMan/OS-X-ACPI-Battery-Driver",
      "bitbucket": {
        "URL": "https://bitbucket.org/RehabMan/os-x-acpi-battery-driver/downloads/"
      }
    },
    {
      "Desc": "for non-native Airport Broadcom Wi-Fi cards",
      "Lilu": true,
      "Name": "AirportBrcmFixup",
      "URL": "git clone --depth 1 https://github.com/acidanthera/AirportBrcmFixup",
      "github": {
        "URL": "https://github.com/acidanthera/AirportBrcmFixup/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-target",
        "AirportItlwm-High Sierra"
      ],
      "Desc": "native Intel Wi-Fi kext for 10.13.x",
      "Folder": "itlwm",
      "Info": "High Sierra/Airportitlwm.kext/Contents/Info.plist",
      "MacKernelSDK": true,
      "Name": "Airportitlwm (10.13 High Sierra)",
      "URL": "git clone --depth 1 https://github.com/OpenIntelWireless/itlwm",
      "Zip": [
        "High Sierra/*"
      ],
      "github": {
        "URL": "https://github.com/OpenIntelWireless/itlwm/releases",
        "debug_regex": "(?i)(high_?sierra.*debug|debug.*high_?sierra)",
        "release_regex": "(?i)(high_?sierra.*stable|stable.*high_?sierra)"
      }
    },
    {
      "Build Opts": [
        "-target",
        "AirportItlwm-Mojave"
      ],
      "Desc": "native Intel Wi-Fi kext for 10.14.x",
      "Folder": "itlwm",
      "Info": "Mojave/Airportitlwm.kext/Contents/Info.plist",
      "MacKernelSDK": true,
      "Name": "Airportitlwm (10.14 Mojave)",
      "URL": "git clone --depth 1 https://github.com/OpenIntelWireless/itlwm",
      "Zip": [
        "Mojave/*"
      ],
      "github": {
        "URL": "https://github.com/OpenIntelWireless/itlwm/releases",
        "debug_regex": "(?i)(mojave.*debug|debug.*mojave)",
        "release_regex": "(?i)(mojave.*stable|stable.*mojave)"
      }
    },
    {
      "Build Opts": [
        "-target",
        "AirportItlwm-Catalina"
      ],
      "Desc": "native Intel Wi-Fi kext for 10.15.x",
      "Folder": "itlwm",
      "Info": "Catalina/Airportitlwm.kext/Contents/Info.plist",
      "MacKernelSDK": true,
      "Name": "Airportitlwm (10.15 Catalina)",
      "URL": "git clone --depth 1 https://github.com/OpenIntelWireless/itlwm",
      "Zip": [
        "Catalina/*"
      ],
      "github": {
        "URL": "https://github.com/OpenIntelWireless/itlwm/releases",
        "debug_regex": "(?i)(catalina.*debug|debug.*catalina)",
        "release_regex": "(?i)(catalina.*stable|stable.*catalina)"
      }
    },
    {
      "Build Opts": [
        "-target",
        "AirportItlwm-Big Sur"
      ],
      "Desc": "native Intel Wi-Fi kext for 11.x",
      "Folder": "itlwm",
      "Info": "Big Sur/Airportitlwm.kext/Contents/Info.plist",
      "MacKernelSDK": true,
      "Name": "Airportitlwm (11 Big Sur)",
      "URL": "git clone --depth 1 https://github.com/OpenIntelWireless/itlwm",
      "Zip": [
        "Big Sur/*"
      ],
      "github": {
        "URL": "https://github.com/OpenIntelWireless/itlwm/releases",
        "debug_regex": "(?i)(big_?sur.*debug|debug.*big_?sur)",
        "release_regex": "(?i)(big_?sur.*stable|stable.*big_?sur)"
      }
    },
    {
      "Build Opts": [
        "-target",
        "AirportItlwm-Monterey"
      ],
      "Desc": "native Intel Wi-Fi kext for 12.x",
      "Folder": "itlwm",
      "Info": "Monterey/Airportitlwm.kext/Contents/Info.plist",
      "MacKernelSDK": true,
      "Name": "Airportitlwm (12 Monterey)",
      "URL": "git clone --depth 1 https://github.com/OpenIntelWireless/itlwm",
      "Zip": [
        "Monterey/*"
      ],
      "github": {
        "URL": "https://github.com/OpenIntelWireless/itlwm/releases",
        "debug_regex": "(?i)(monterey.*debug|debug.*monterey)",
        "release_regex": "(?i)(monterey.*stable|stable.*monterey)"
      }
    },
    {
      "Build Opts": [
        "-target",
        "AirportItlwm-Ventura"
      ],
      "Desc": "native Intel Wi-Fi kext for 13.x",
      "Folder": "itlwm",
      "Info": "Ventura/Airportitlwm.kext/Contents/Info.plist",
      "MacKernelSDK": true,
      "Name": "Airportitlwm (13 Ventura)",
      "URL": "git clone --depth 1 https://github.com/OpenIntelWireless/itlwm",
      "Zip": [
        "Ventura/*"
      ],
      "github": {
        "URL": "https://github.com/OpenIntelWireless/itlwm/releases",
        "debug_regex": "(?i)(ventura.*debug|debug.*ventura)",
        "release_regex": "(?i)(ventura.*stable|stable.*ventura)"
      }
    },
    {
      "Build Opts": [
        "-target",
        "AirportItlwm-Sonoma14.0"
      ],
      "Desc": "native Intel Wi-Fi kext for 14.0 through 14.3",
      "Folder": "itlwm",
      "Info": "Sonoma14.0/Airportitlwm.kext/Contents/Info.plist",
      "MacKernelSDK": true,
      "Name": "Airportitlwm (14.0 Sonoma)",
      "URL": "git clone --depth 1 https://github.com/OpenIntelWireless/itlwm",
      "Zip": [
        "Sonoma14.0/*"
      ],
      "github": {
        "URL": "https://github.com/OpenIntelWireless/itlwm/releases",
        "debug_regex": "(?i)(sonoma14.0.*debug|debug.*sonoma14.0)",
        "release_regex": "(?i)(sonoma14.0.*stable|stable.*sonoma14.0)"
      }
    },
    {
      "Build Opts": [
        "-target",
        "AirportItlwm-Sonoma14.4"
      ],
      "Desc": "native Intel Wi-Fi kext for 14.4+",
      "Folder": "itlwm",
      "Info": "Sonoma14.4/Airportitlwm.kext/Contents/Info.plist",
      "MacKernelSDK": true,
      "Name": "Airportitlwm (14.4 Sonoma)",
      "URL": "git clone --depth 1 https://github.com/OpenIntelWireless/itlwm",
      "Zip": [
        "Sonoma14.4/*"
      ],
      "github": {
        "URL": "https://github.com/OpenIntelWireless/itlwm/releases",
        "debug_regex": "(?i)(sonoma14.4.*debug|debug.*sonoma14.4)",
        "release_regex": "(?i)(sonoma14.4.*stable|stable.*sonoma14.4)"
      }
    },
    {
      "Desc": "native Intel Wi-Fi kext",
      "Folder": "itlwm",
      "Info": "Big Sur/Airportitlwm.kext/Contents/Info.plist",
      "MacKernelSDK": true,
      "Name": "Airportitlwm (all versions)",
      "Skip Targets": [
        "itlwm",
        "fw_gen"
      ],
      "URL": "git clone --depth 1 https://github.com/OpenIntelWireless/itlwm",
      "Zip": [
        "*"
      ],
      "github": {
        "URL": "https://github.com/OpenIntelWireless/itlwm/releases",
        "debug_regex": "(?i)debug",
        "release_regex": "(?i)stable"
      }
    },
    {
      "Build Opts": [
        "-arch",
        "x86_64"
      ],
      "Desc": "VoodooI2C satellite for Alps touchpad and trackpoint",
      "MacKernelSDK": true,
      "Name": "AlpsHID",
      "URL": "git clone --depth 1 --recursive -j8 https://github.com/blankmac/AlpsHID",
      "github": {
        "URL": "https://github.com/blankmac/AlpsHID/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-arch",
        "x86_64"
      ],
      "Desc": "AlpsHID with the QuietTimeAfterTyping lowered from 500ms to 150ms",
      "Folder": "AlpsHID150ms",
      "Info": "AlpsHID.kext/Contents/Info.plist",
      "MacKernelSDK": true,
      "Name": "AlpsHID (150ms delay)",
      "Post-Build": [
        {
          "args": [
            "-i",
            "",
            "-e",
            "s|<integer>500</integer>|<integer>150</integer>|",
            "./build/Release/AlpsHID.kext/Contents/Info.plist"
          ],
          "name": "QuietTimeAfterTyping 500ms -> 150ms",
          "path": "/usr/bin/sed"
        }
      ],
      "URL": "git clone --depth 1 --recursive -j8 https://github.com/blankmac/AlpsHID AlpsHID150ms",
      "Zip": "./AlpsHID.kext",
      "github": {
        "URL": "https://github.com/blankmac/AlpsHID/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "Atheros OSX driver originally coded by Shailua",
      "Folder": "OSX-ALXEthernet",
      "Name": "ALXEthernet",
      "URL": "git clone --depth 1 https://github.com/Dolnor/OSX-ALXEthernet"
    },
    {
      "Desc": "dynamic audio patching",
      "Lilu": true,
      "Name": "AppleALC",
      "URL": "git clone --depth 1 https://github.com/acidanthera/AppleALC",
      "Zip": [
        "*.kext"
      ],
      "github": {
        "URL": "https://github.com/acidanthera/AppleALC/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-scheme",
        "AtherosE2200EthernetV2",
        "-configuration",
        "Release"
      ],
      "Desc": "for Killer and Atheros LAN",
      "MacKernelSDK": true,
      "Name": "AtherosE2200Ethernet",
      "URL": "git clone --depth 1 https://github.com/Mieze/AtherosE2200Ethernet",
      "github": {
        "URL": "https://github.com/Mieze/AtherosE2200Ethernet/releases",
        "regex": "(?i)AtherosE2200Ethernet[^\\/].*\\.zip"
      }
    },
    {
      "Build Opts": [
        "-sdk",
        "macosx",
        "-arch",
        "x86_64"
      ],
      "Desc": "for Broadcom's BCM5722 NetXtreme and NetLink family LAN",
      "Name": "BCM5722D",
      "URL": "git clone --depth 1 https://github.com/adlan/BCM5722D"
    },
    {
      "Build Opts": [
        "-sdk",
        "macosx"
      ],
      "Desc": "applies PatchRAM updates for Broadcom RAMUSB based devices",
      "Folder": "BrcmPatchRAM",
      "Info": "BrcmPatchRam2.kext/Contents/Info.plist",
      "Lilu": true,
      "Name": "BrcmPatchRAM (Acidanthera)",
      "Pre-Build": [
        {
          "args": [
            "-sdk",
            "macosx",
            "-target",
            "Prebuild"
          ],
          "name": "Compile Prebuild Prerequisite",
          "path": "xcodebuild"
        }
      ],
      "Skip Targets": [
        "BrcmPatchRAM",
        "BrcmNonPatchRAM"
      ],
      "URL": "git clone --depth 1 https://github.com/acidanthera/BrcmPatchRAM",
      "Zip": [
        "*.kext"
      ],
      "github": {
        "URL": "https://github.com/acidanthera/BrcmPatchRAM/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "Automatic handling of brightness keys based on ACPI Specification",
      "Lilu": true,
      "Name": "BrightnessKeys",
      "URL": "git clone --depth 1 https://github.com/acidanthera/BrightnessKeys",
      "github": {
        "URL": "https://github.com/acidanthera/BrightnessKeys/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-sdk",
        "macosx",
        "-alltargets"
      ],
      "Desc": "aids in non-functioning audio after sleep",
      "Folder": "EAPD-Codec-Commander",
      "Name": "CodecCommander",
      "URL": "git clone --depth 1 https://github.com/RehabMan/EAPD-Codec-Commander",
      "bitbucket": {
        "URL": "https://bitbucket.org/RehabMan/os-x-eapd-codec-commander/downloads/"
      }
    },
    {
      "Desc": "for dynamic power management data injection",
      "Lilu": true,
      "Name": "CPUFriend",
      "URL": "git clone --depth 1 https://github.com/PMheart/CPUFriend",
      "github": {
        "URL": "https://github.com/PMheart/CPUFriend/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "syncs TSC and disables xcpm_urgency",
      "Lilu": true,
      "Name": "CpuTscSync",
      "URL": "git clone --depth 1 https://github.com/acidanthera/CpuTscSync",
      "Zip": [
        "*.kext"
      ],
      "github": {
        "URL": "https://github.com/acidanthera/CpuTscSync/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "AMD compatible build of CpuTscSync from Seey6",
      "Folder": "CpuTscSyncAMD",
      "Info": "CpuTscSync.kext/Contents/Info.plist",
      "Lilu": true,
      "Name": "CpuTscSync (AMD)",
      "URL": "git clone --depth 1 https://github.com/Seey6/CpuTscSync CpuTscSyncAMD",
      "Zip": [
        "*.kext"
      ],
      "github": {
        "URL": "https://github.com/acidanthera/CpuTscSync/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "A Lilu plugin intended to enable debug output in the macOS kernel",
      "Lilu": true,
      "Name": "DebugEnhancer",
      "URL": "git clone --depth 1 https://github.com/acidanthera/DebugEnhancer",
      "github": {
        "URL": "https://github.com/acidanthera/DebugEnhancer/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "allows reading EC fields > 1 byte, reducing battery status ACPI",
      "Lilu": true,
      "Name": "ECEnabler",
      "URL": "git clone --depth 1 https://github.com/1Revenger1/ECEnabler",
      "github": {
        "URL": "https://github.com/1Revenger1/ECEnabler/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-sdk",
        "macosx",
        "-alltargets"
      ],
      "Desc": "spoofs IOPCIDevices to allow drivers to load",
      "Folder": "OS-X-Fake-PCI-ID",
      "Name": "FakePCIID",
      "URL": "git clone --depth 1 https://github.com/RehabMan/OS-X-Fake-PCI-ID",
      "Zip": [
        "*.kext"
      ],
      "bitbucket": {
        "URL": "https://bitbucket.org/RehabMan/os-x-fake-pci-id/downloads/"
      }
    },
    {
      "Build Dir": "./Binaries",
      "Build Opts": [
        "-sdk",
        "macosx",
        "-workspace",
        "HWSensors.xcworkspace",
        "-scheme",
        "Build Kexts"
      ],
      "Desc": "only Kozlek's FakeSMC",
      "Folder": "HWSensors",
      "Info": "FakeSMC.kext/Contents/Info.plist",
      "Name": "FakeSMC (Kozlek)",
      "URL": "git clone --depth 1 https://github.com/kozlek/HWSensors",
      "Zip": "./FakeSMC.kext",
      "github": {
        "URL": "https://github.com/kozlek/HWSensors/releases",
        "regex": "(?i)HWSensors[^\\/].*\\.zip"
      }
    },
    {
      "Build Dir": "./Binaries",
      "Build Opts": [
        "-project",
        "HWSensors.xcodeproj"
      ],
      "Desc": "only FakeSMC (Legacy)",
      "Folder": "hwsensors-code",
      "Info": "FakeSMC.kext/Contents/Info.plist",
      "Name": "FakeSMC (Legacy)",
      "Pre-Build": [
        {
          "args": [
            "-project",
            "Versioning And Distribution.xcodeproj"
          ],
          "name": "Compile Versioning And Distribution Prerequisite",
          "path": "xcodebuild"
        }
      ],
      "URL": "git clone --depth 1 https://git.code.sf.net/p/hwsensors/code hwsensors-code",
      "Zip": "./FakeSMC.kext"
    },
    {
      "Build Opts": [
        "-sdk",
        "macosx",
        "-workspace",
        "HWSensors.xcworkspace",
        "-scheme",
        "Build Kexts"
      ],
      "Desc": "only RehabMan's FakeSMC",
      "Folder": "OS-X-FakeSMC-kozlek",
      "Info": "FakeSMC.kext/Contents/Info.plist",
      "Name": "FakeSMC (RehabMan)",
      "URL": "git clone --depth 1 https://github.com/RehabMan/OS-X-FakeSMC-kozlek",
      "Zip": "./FakeSMC.kext",
      "bitbucket": {
        "URL": "https://bitbucket.org/RehabMan/os-x-fakesmc-kozlek/downloads/"
      }
    },
    {
      "Desc": "for enabling Sidecar, NightShift, AirPlay to Mac and Universal Control",
      "Lilu": true,
      "Name": "FeatureUnlock",
      "URL": "git clone --depth 1 https://github.com/acidanthera/FeatureUnlock",
      "github": {
        "URL": "https://github.com/acidanthera/FeatureUnlock/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "Lilu plugin for syncing the TSC on AMD & Intel.",
      "Name": "ForgedInvariant",
      "URL": "git clone --depth 1 --recursive https://github.com/ChefKissInc/ForgedInvariant",
      "github": {
        "URL": "https://github.com/ChefKissInc/ForgedInvariant/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "Lilu plugin - makes System Info recognize your builtin USB card reader as native",
      "Lilu": true,
      "Name": "GenericCardReaderFriend",
      "URL": "git clone --depth 1 https://github.com/0xFireWolf/GenericCardReaderFriend",
      "github": {
        "URL": "https://github.com/0xFireWolf/GenericCardReaderFriend/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Dir": "./build/Universal",
      "Build Opts": [
        "-sdk",
        "macosx10.10",
        "-alltargets"
      ],
      "Desc": "generic, non-Intel USB3 support",
      "Folder": "OS-X-Generic-USB3",
      "Name": "GenericUSBXHCI",
      "URL": "git clone --depth 1 https://github.com/RehabMan/OS-X-Generic-USB3",
      "bitbucket": {
        "URL": "https://bitbucket.org/RehabMan/os-x-generic-usb3/downloads/"
      }
    },
    {
      "Desc": "saves IOHibernateRTCVariables in NVRAM",
      "Lilu": true,
      "Name": "HibernationFixup",
      "URL": "git clone --depth 1 https://github.com/acidanthera/HibernationFixup HibernationFixup",
      "github": {
        "URL": "https://github.com/acidanthera/HibernationFixup/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Dir": "./Binaries",
      "Build Opts": [
        "-sdk",
        "macosx",
        "-workspace",
        "HWSensors.xcworkspace",
        "-scheme",
        "Build Kexts"
      ],
      "Desc": "Kozlek's FakeSMC + Sensors",
      "Folder": "HWSensors",
      "Info": "FakeSMC.kext/Contents/Info.plist",
      "Name": "HWSensors (Kozlek)",
      "URL": "git clone --depth 1 https://github.com/kozlek/HWSensors",
      "Zip": "../Binaries",
      "github": {
        "URL": "https://github.com/kozlek/HWSensors/releases",
        "regex": "(?i)HWSensors[^\\/].*\\.zip"
      }
    },
    {
      "Build Dir": "./Binaries",
      "Build Opts": [
        "-alltargets",
        "-project",
        "HWSensors.xcodeproj"
      ],
      "Desc": "contains legacy FakeSMC + HWSensors plugins",
      "Folder": "hwsensors-code",
      "Info": "FakeSMC.kext/Contents/Info.plist",
      "Name": "HWSensors (Legacy)",
      "Pre-Build": [
        {
          "args": [
            "-project",
            "Versioning And Distribution.xcodeproj"
          ],
          "name": "Compile Versioning And Distribution Prerequisite",
          "path": "xcodebuild"
        }
      ],
      "URL": "git clone --depth 1 https://git.code.sf.net/p/hwsensors/code hwsensors-code",
      "Zip": "../Binaries"
    },
    {
      "Build Opts": [
        "-sdk",
        "macosx",
        "-workspace",
        "HWSensors.xcworkspace",
        "-scheme",
        "Build Kexts"
      ],
      "Desc": "RehabMan's FakeSMC + Sensors",
      "Folder": "OS-X-FakeSMC-kozlek",
      "Info": "FakeSMC.kext/Contents/Info.plist",
      "Name": "HWSensors (RehabMan)",
      "URL": "git clone --depth 1 https://github.com/RehabMan/OS-X-FakeSMC-kozlek",
      "Zip": [
        "*.kext"
      ],
      "bitbucket": {
        "URL": "https://bitbucket.org/RehabMan/os-x-fakesmc-kozlek/downloads/"
      }
    },
    {
      "Build Opts": [
        "-configuration",
        "Release"
      ],
      "Desc": "Lilu plug-in to fix macOS' OTA process",
      "Name": "iBridged",
      "URL": "git clone --depth 1 --recursive https://github.com/Carnations-Botanica/iBridged",
      "Zip": [
        "*.kext"
      ],
      "github": {
        "URL": "https://github.com/Carnations-Botanica/iBridged/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-sdk",
        "macosx",
        "-alltargets"
      ],
      "Desc": "replaces AppleBacklight for intel graphics - pre-10.12.4",
      "Folder": "OS-X-Intel-Backlight",
      "Name": "IntelBacklight",
      "URL": "git clone --depth 1 https://github.com/RehabMan/OS-X-Intel-Backlight",
      "bitbucket": {
        "URL": "https://bitbucket.org/RehabMan/os-x-intel-backlight/downloads/"
      }
    },
    {
      "Build Opts": [
        "-alltargets"
      ],
      "Desc": "Intel Bluetooth kext",
      "Lilu": true,
      "MacKernelSDK": true,
      "Name": "IntelBluetoothFirmware",
      "URL": "git clone --depth 1 https://github.com/OpenIntelWireless/IntelBluetoothFirmware",
      "Zip": [
        "*.kext"
      ],
      "github": {
        "URL": "https://github.com/OpenIntelWireless/IntelBluetoothFirmware/releases",
        "regex": "(?i)IntelBluetoothFirmware[^\\/].*\\.zip"
      }
    },
    {
      "Desc": "for Intel X500 family of 10GBit Ethernet controllers",
      "Name": "IntelLucy",
      "URL": "git clone --depth 1 https://github.com/Mieze/IntelLucy",
      "github": {
        "URL": "https://github.com/Mieze/IntelLucy/releases",
        "regex": "(?i)IntelLucy[^\\/].*\\.zip"
      }
    },
    {
      "Build Opts": [
        "-sdk",
        "macosx",
        "-configuration",
        "Release"
      ],
      "Desc": "Acidanthera's IntelMausiEthernet",
      "Folder": "IntelMausi",
      "Info": "IntelMausi.kext/Contents/Info.plist",
      "MacKernelSDK": true,
      "Name": "IntelMausi (Acidanthera)",
      "URL": "git clone --depth 1 https://github.com/acidanthera/IntelMausi",
      "Zip": [
        "*.kext"
      ],
      "github": {
        "URL": "https://github.com/acidanthera/IntelMausi/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "for most Intel LAN",
      "Name": "IntelMausiEthernet",
      "URL": "git clone --depth 1 https://github.com/Mieze/IntelMausiEthernet"
    },
    {
      "Desc": "MKL (Math Kernel Library) patcher for macOS",
      "Lilu": true,
      "Name": "IntelMKLFixup",
      "URL": "git clone --depth 1 https://github.com/Carnations-Botanica/IntelMKLFixup",
      "Zip": [
        "*.kext"
      ],
      "github": {
        "URL": "https://github.com/Carnations-Botanica/IntelMKLFixup/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-target",
        "itlwm"
      ],
      "Desc": "Intel Wi-Fi kext",
      "Info": "itlwm.kext/Contents/Info.plist",
      "MacKernelSDK": true,
      "Name": "Itlwm",
      "URL": "git clone --depth 1 https://github.com/OpenIntelWireless/itlwm",
      "Zip": "./itlwm.kext",
      "github": {
        "URL": "https://github.com/OpenIntelWireless/itlwm/releases",
        "debug_regex": "(?i)\\/itlwm[^\\/].*debug",
        "release_regex": "(?i)\\/itlwm[^\\/].*stable"
      }
    },
    {
      "Desc": "for arbitrary kext, library, and program patching",
      "MacKernelSDK": true,
      "Name": "Lilu",
      "URL": "git clone --depth 1 https://github.com/acidanthera/Lilu",
      "github": {
        "URL": "https://github.com/acidanthera/Lilu/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-arch",
        "x86_64"
      ],
      "Desc": "for Realtek RTL8125 2.5GBit Ethernet Controllers",
      "Name": "LucyRTL8125Ethernet",
      "URL": "git clone --depth 1 https://github.com/Mieze/LucyRTL8125Ethernet",
      "github": {
        "URL": "https://github.com/Mieze/LucyRTL8125Ethernet/releases",
        "regex": "(?i)LucyRTL8125Ethernet[^\\/].*\\.zip"
      }
    },
    {
      "Desc": "enables night shift on unsupported SMBIOS",
      "Lilu": true,
      "Name": "NightShiftEnabler",
      "URL": "git clone --depth 1 https://github.com/cdf/NightShiftEnabler",
      "github": {
        "URL": "https://github.com/cdf/NightShiftEnabler/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "Lilu plugin for AMD Vega iGPUs",
      "Name": "NootedRed",
      "URL": "git clone --depth 1 --recursive https://github.com/ChefKissInc/NootedRed",
      "github": {
        "URL": "https://github.com/ChefKissInc/NootedRed/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "Lilu plug-in for unsupported RDNA 2 desktop dGPUs",
      "Name": "NootRX",
      "URL": "git clone --depth 1 --recursive https://github.com/ChefKissInc/NootRX",
      "github": {
        "URL": "https://github.com/ChefKissInc/NootRX/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "Lilu plugin for disabling Touch ID checks",
      "Lilu": true,
      "Name": "NoTouchID",
      "URL": "git clone --depth 1 https://github.com/al3xtjames/NoTouchID",
      "github": {
        "URL": "https://github.com/al3xtjames/NoTouchID/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-sdk",
        "macosx",
        "-arch",
        "x86_64"
      ],
      "Desc": "disables power management on unsupported CPUs",
      "Name": "NullCPUPowerManagement",
      "URL": "git clone --depth 1 https://github.com/corpnewt/NullCPUPowerManagement"
    },
    {
      "Desc": "provides patches for NVME Power management support - APST",
      "Lilu": true,
      "Name": "NVMeFix",
      "URL": "git clone --depth 1 https://github.com/acidanthera/NVMeFix",
      "github": {
        "URL": "https://github.com/acidanthera/NVMeFix/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-configuration",
        "Release"
      ],
      "Desc": "Lilu plug-in that hides information indicating the current machine is a Hackintosh",
      "Name": "Phantom",
      "URL": "git clone --depth 1 --recursive https://github.com/Carnations-Botanica/Phantom",
      "Zip": [
        "*.kext"
      ],
      "github": {
        "URL": "https://github.com/Carnations-Botanica/Phantom/releases",
        "debug_regex": "(?i)phantom.*debug\\.zip",
        "release_regex": "(?i)phantom.*release\\.zip"
      }
    },
    {
      "Desc": "unleash the full potential of your SDXC UHS-I cards",
      "Lilu": true,
      "Name": "RealtekCardReader",
      "URL": "git clone --depth 1 https://github.com/0xFireWolf/RealtekCardReader",
      "github": {
        "URL": "https://github.com/0xFireWolf/RealtekCardReader/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "Lilu plugin - makes System Info recognize your Realtek card reader as native",
      "Lilu": true,
      "Name": "RealtekCardReaderFriend",
      "URL": "git clone --depth 1 https://github.com/0xFireWolf/RealtekCardReaderFriend",
      "github": {
        "URL": "https://github.com/0xFireWolf/RealtekCardReaderFriend/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "for RTL810X LAN",
      "Name": "RealtekRTL8100",
      "URL": "git clone --depth 1 https://github.com/Mieze/RealtekRTL8100"
    },
    {
      "Build Opts": [
        "-arch",
        "x86_64"
      ],
      "Desc": "for RTL8111/8168 LAN",
      "Folder": "RTL8111_driver_for_OS_X",
      "MacKernelSDK": true,
      "Name": "RealtekRTL8111",
      "Pre-Build": [
        {
          "args": [
            "-p",
            "./build/Release"
          ],
          "name": "Creating ./build/Release directory",
          "no_debug_replace": true,
          "path": "/bin/mkdir"
        },
        {
          "args": [
            "../MacKernelSDK/Library/x86_64/libkmod.a",
            "./build/Release/"
          ],
          "name": "Copying libkmod.a to ./build/Release",
          "no_debug_replace": true,
          "path": "/bin/cp"
        }
      ],
      "URL": "git clone --depth 1 https://github.com/Mieze/RTL8111_driver_for_OS_X",
      "github": {
        "URL": "https://github.com/Mieze/RTL8111_driver_for_OS_X/releases",
        "regex": "(?i)RealtekRTL8111[^\\/].*\\.zip"
      }
    },
    {
      "Desc": "Lilu plugin for blocking unwanted processes causing compatibility issues",
      "Lilu": true,
      "Name": "RestrictEvents",
      "URL": "git clone --depth 1 https://github.com/acidanthera/RestrictEvents",
      "github": {
        "URL": "https://github.com/acidanthera/RestrictEvents/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "provides a way to emulate some offsets in CMOS (RTC) memory",
      "Lilu": true,
      "Name": "RTCMemoryFixup",
      "URL": "git clone --depth 1 https://github.com/acidanthera/RTCMemoryFixup",
      "github": {
        "URL": "https://github.com/acidanthera/RTCMemoryFixup/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "AMD GPU temperature monitoring on macOS",
      "Folder": "SMCRadeonSensors",
      "Info": "SMCRadeonSensors.kext/Contents/Info.plist",
      "Name": "SMCRadeonSensors (ChefKissInc)",
      "URL": "git clone --depth 1 --recursive https://github.com/ChefKissInc/SMCRadeonSensors",
      "Zip": [
        "*.kext"
      ],
      "github": {
        "URL": "https://github.com/ChefKissInc/SMCRadeonSensors/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-sdk",
        "macosx",
        "-alltargets"
      ],
      "Desc": "injects all USB ports",
      "Folder": "OS-X-USB-Inject-All",
      "Name": "USBInjectAll",
      "Post-Build": [
        {
          "args": [
            "*.kext",
            "Build/Release/"
          ],
          "name": "Move Injector Kexts to Release Folder",
          "path": "mv"
        }
      ],
      "URL": "git clone --depth 1 https://github.com/RehabMan/OS-X-USB-Inject-All",
      "Zip": [
        "*.kext"
      ],
      "bitbucket": {
        "URL": "https://bitbucket.org/RehabMan/os-x-usb-inject-all/downloads/"
      }
    },
    {
      "Build Opts": [
        "-sdk",
        "macosx",
        "-alltargets"
      ],
      "Desc": "injects all USB ports",
      "Folder": "Sniki-UIA",
      "Info": "USBInjectAll.kext/Contents/Info.plist",
      "Name": "USBInjectAll (Sniki)",
      "Post-Build": [
        {
          "args": [
            "*.kext",
            "./Build/Products/Release/"
          ],
          "name": "Move Injector Kexts to Release Folder",
          "path": "mv"
        }
      ],
      "URL": "git clone --depth 1 https://github.com/Sniki/OS-X-USB-Inject-All Sniki-UIA",
      "Zip": [
        "*.kext"
      ],
      "github": {
        "URL": "https://github.com/Sniki/OS-X-USB-Inject-All/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "advanced Apple SMC emulator in the kernel. (Just VirtualSMC.kext)",
      "Lilu": true,
      "Name": "VirtualSMC",
      "URL": "git clone --depth 1 https://github.com/acidanthera/VirtualSMC",
      "github": {
        "URL": "https://github.com/acidanthera/VirtualSMC/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-target",
        "Package"
      ],
      "Desc": "advanced Apple SMC emulator in the kernel. (All tools)",
      "Folder": "VirtualSMC",
      "Info": "VirtualSMC.kext/Contents/Info.plist",
      "Lilu": true,
      "Name": "VirtualSMC (All Tools)",
      "Post-Build": [
        {
          "args": [
            "-p",
            "./build/Release/VirtualSMC/Kexts"
          ],
          "name": "Create Kexts Folder",
          "path": "mkdir"
        },
        {
          "args": [
            "-p",
            "./build/Release/VirtualSMC/Tools"
          ],
          "name": "Create Tools Folder",
          "path": "mkdir"
        },
        {
          "args": [
            "./build/Release/package/Kexts/*",
            "./build/Release/VirtualSMC/Kexts/"
          ],
          "name": "Move Kexts",
          "path": "mv"
        },
        {
          "args": [
            "./build/Release/package/Tools/*",
            "./build/Release/VirtualSMC/Tools/"
          ],
          "name": "Move Tools",
          "path": "mv"
        }
      ],
      "URL": "git clone --depth 1 https://github.com/acidanthera/VirtualSMC",
      "Zip": "VirtualSMC",
      "github": {
        "URL": "https://github.com/acidanthera/VirtualSMC/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-workspace",
        "VoodooI2C.xcworkspace",
        "-scheme",
        "VoodooI2C",
        "-sdk",
        "macosx",
        "DEBUG_INFORMATION_FORMAT=none"
      ],
      "Desc": "Intel Lynxpoint I2C controller and device driver for OS X",
      "Ignore Errors": true,
      "MacKernelSDK": true,
      "Name": "VoodooI2C",
      "Pre-Build": [
        {
          "args": [
            "https://raw.githubusercontent.com/acidanthera/VoodooInput/master/VoodooInput/Scripts/bootstrap.sh",
            "-o",
            "bootstrap.sh"
          ],
          "name": "Gather VoodooInput bootstrap.sh",
          "path": "/usr/bin/curl"
        },
        {
          "args": [
            "bootstrap.sh"
          ],
          "name": "Execute VoodooInput bootstrap.sh",
          "path": "/bin/bash"
        },
        {
          "args": [
            "VoodooInput",
            "Dependencies"
          ],
          "name": "Moving VoodooInput to Dependencies",
          "path": "/bin/mv"
        }
      ],
      "Remove Phases": [
        {
          "path": "VoodooI2C/VoodooI2C.xcodeproj/project.pbxproj",
          "phases": [
            "Generate Documentation",
            "Linting"
          ]
        },
        {
          "path": "VoodooI2C Satellites/VoodooI2CFTE/VoodooI2CFTE.xcodeproj/project.pbxproj",
          "phases": [
            "Linting"
          ]
        }
      ],
      "URL": "git clone --depth 1 --recursive -j8 https://github.com/alexandred/VoodooI2C",
      "Zip": [
        "*.kext"
      ],
      "github": {
        "URL": "https://github.com/alexandred/VoodooI2C/releases",
        "debug_regex": "(?i)debug.*\\.zip",
        "release_regex": "(?i)(?!.*debug.*)VoodooI2C[^\\/].*\\.zip"
      }
    },
    {
      "Desc": "Trackpad aggregator kext providing Magic Trackpad 2 software emulation",
      "MacKernelSDK": true,
      "Name": "VoodooInput",
      "URL": "git clone --depth 1 https://github.com/acidanthera/VoodooInput",
      "github": {
        "URL": "https://github.com/acidanthera/VoodooInput/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-arch",
        "x86_64"
      ],
      "Desc": "VoodooPS2 made for ALPS touchpads",
      "Info": "VoodooPS2Controller.kext/Contents/Info.plist",
      "Name": "VoodooPS2-ALPS",
      "URL": "git clone --depth 1 --recursive -j8 https://github.com/1Revenger1/VoodooPS2-Alps",
      "Zip": [
        "*.kext"
      ],
      "github": {
        "URL": "https://github.com/1Revenger1/VoodooPS2-Alps/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "VoodooPS2 leveraging VoodooInput made for ALPS v7-8 touchpads",
      "Info": "VoodooPS2Controller.kext/Contents/Info.plist",
      "MacKernelSDK": true,
      "Name": "VoodooPS2-ALPS (VoodooInput)",
      "Pre-Build": [
        {
          "args": [
            "https://raw.githubusercontent.com/acidanthera/VoodooInput/master/VoodooInput/Scripts/bootstrap.sh",
            "-o",
            "bootstrap.sh"
          ],
          "name": "Gather VoodooInput bootstrap.sh",
          "path": "/usr/bin/curl"
        },
        {
          "args": [
            "bootstrap.sh"
          ],
          "name": "Execute VoodooInput bootstrap.sh",
          "path": "/bin/bash"
        }
      ],
      "URL": "git clone --depth 1 --recursive -j8 https://github.com/SkyrilHD/VoodooPS2-ALPS",
      "Zip": [
        "*.kext"
      ],
      "github": {
        "URL": "https://github.com/SkyrilHD/VoodooPS2-ALPS/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Build Opts": [
        "-sdk",
        "macosx"
      ],
      "Desc": "PS2 driver for desktops/laptops",
      "FixXib": true,
      "Folder": "OS-X-Voodoo-PS2-Controller",
      "Name": "VoodooPS2Controller",
      "Post-Build": [
        {
          "args": [
            "-p",
            "Build/Release/SSDT/Source"
          ],
          "name": "Create Source Folder",
          "path": "mkdir"
        },
        {
          "args": [
            "-p",
            "Build/Release/SSDT/Compiled"
          ],
          "name": "Create Compiled Folder",
          "path": "mkdir"
        },
        {
          "args": [
            "-sc",
            "a|Your setup may not need any of the SSDTs; if it does, note that some need to be edited before compiling and using.",
            "-cx",
            "./Build/Release/SSDT/Info.txt"
          ],
          "name": "Create Info.txt",
          "path": "ex"
        },
        {
          "args": [
            "*.aml",
            "Build/Release/SSDT/Compiled"
          ],
          "bail": false,
          "name": "Move .aml Files to Compiled Folder",
          "no_print": true,
          "path": "mv"
        },
        {
          "args": [
            "*.dsl",
            "Build/Release/SSDT/Source"
          ],
          "bail": false,
          "name": "Move .dsl Files to Source Folder",
          "no_print": true,
          "path": "mv"
        }
      ],
      "Pre-Build": [
        {
          "args": [
            "*.dsl"
          ],
          "bail": false,
          "name": "Compile SSDTs",
          "no_print": true,
          "path": [
            "[[scripts]]/iasl",
            "[[scripts]]/iasl-stable",
            "[[scripts]]/iasl-dev",
            "[[scripts]]/iasl-legacy"
          ]
        }
      ],
      "Skip Targets": [
        "VoodooPS2Daemon",
        "VoodooPS2synapticsPane",
        "synapticsconfigload"
      ],
      "URL": "git clone --depth 1 https://github.com/RehabMan/OS-X-Voodoo-PS2-Controller",
      "Zip": [
        "*.kext",
        "SSDT"
      ],
      "bitbucket": {
        "URL": "https://bitbucket.org/RehabMan/os-x-voodoo-ps2-controller/downloads/"
      }
    },
    {
      "Build Opts": [
        "-sdk",
        "macosx"
      ],
      "Desc": "PS2 driver for desktops/laptops",
      "FixXib": true,
      "Folder": "VoodooPS2",
      "Info": "VoodooPS2Controller.kext/Contents/Info.plist",
      "MacKernelSDK": true,
      "Name": "VoodooPS2Controller (Acidanthera)",
      "Post-Build": [
        {
          "args": [
            "-p",
            "Build/Release/SSDT/Source"
          ],
          "name": "Create Source Folder",
          "path": "mkdir"
        },
        {
          "args": [
            "-p",
            "Build/Release/SSDT/Compiled"
          ],
          "name": "Create Compiled Folder",
          "path": "mkdir"
        },
        {
          "args": [
            "-sc",
            "a|Your setup may not need any of the SSDTs; if it does, note that some need to be edited before compiling and using.",
            "-cx",
            "./Build/Release/SSDT/Info.txt"
          ],
          "name": "Create Info.txt",
          "path": "ex"
        },
        {
          "args": [
            "*.aml",
            "Build/Release/SSDT/Compiled"
          ],
          "bail": false,
          "name": "Move .aml Files to Compiled Folder",
          "no_print": true,
          "path": "mv"
        },
        {
          "args": [
            "*.dsl",
            "Build/Release/SSDT/Source"
          ],
          "bail": false,
          "name": "Move .dsl Files to Source Folder",
          "no_print": true,
          "path": "mv"
        }
      ],
      "Pre-Build": [
        {
          "args": [
            "./Docs/ACPI/*",
            "./"
          ],
          "name": "Relocate ACPI files",
          "path": "mv"
        },
        {
          "args": [
            "*.dsl"
          ],
          "bail": false,
          "name": "Compile SSDTs",
          "no_print": true,
          "path": [
            "[[scripts]]/iasl",
            "[[scripts]]/iasl-stable",
            "[[scripts]]/iasl-dev",
            "[[scripts]]/iasl-legacy"
          ]
        }
      ],
      "Skip Targets": [
        "VoodooPS2Daemon",
        "VoodooPS2synapticsPane",
        "synapticsconfigload"
      ],
      "URL": "git clone --depth 1 https://github.com/acidanthera/VoodooPS2 --recursive",
      "Zip": [
        "*.kext",
        "SSDT"
      ],
      "github": {
        "URL": "https://github.com/acidanthera/VoodooPS2/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "port for macOS of Synaptic's RMI Trackpad driver from Linux",
      "MacKernelSDK": true,
      "Name": "VoodooRMI",
      "URL": "git clone --depth 1 --recurse https://github.com/VoodooSMBus/VoodooRMI",
      "github": {
        "URL": "https://github.com/VoodooSMBus/VoodooRMI/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    },
    {
      "Desc": "provides patches for AMD/Nvidia/Intel GPUs",
      "Lilu": true,
      "Name": "WhateverGreen",
      "URL": "git clone --depth 1 https://github.com/acidanthera/WhateverGreen",
      "github": {
        "URL": "https://github.com/acidanthera/WhateverGreen/releases",
        "debug_regex": "(?i)debug\\.zip",
        "release_regex": "(?i)release\\.zip"
      }
    }
  ],
  "Version": "0.0.142"
}